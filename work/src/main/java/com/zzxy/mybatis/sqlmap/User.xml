<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
	namespace：命名空间，它的作用就是对SQL进行分类化管理，可以理解为SQL隔离
	注意：使用mapper代理开发时，namespace有特殊且重要的作用
 -->
<mapper namespace="test">
    <!--
        [id]：statement的id，要求在命名空间内唯一
        [parameterType]：入参的java类型
        [resultType]：查询出的单条结果集对应的java类型
        [#{}]： 表示一个占位符?
        [#{id}]：表示该占位符待接收参数的名称为id。注意：如果参数为简单类型时，#{}里面的参数名称可以是任意定义
     -->
    <select id="findUserById" parameterType="int" resultType="com.zzxy.mybatis.entity.User">
		SELECT * FROM USER WHERE id = #{id}
	</select>
    <!--模糊查询用户信息-->
    <select id="findUserByName" parameterType="String" resultType="com.zzxy.mybatis.entity.User">
        select * from user where username like '%${value}%'
    </select>
    <!--插入用户信息-->
    <insert id="insertUser" parameterType="com.zzxy.mybatis.entity.User">
        <!--如果主键是自增机制,此处不需要再给id赋值 -->
        insert into user(username,birthday,sex,address) values (#{username}, #{birthday},#{sex}, #{address})
    </insert>

    <insert id="insertUser2" parameterType="com.zzxy.mybatis.entity.User">
        <!--
			[selectKey标签]：通过select查询来生成主键
			[keyProperty]：指定存放生成主键的属性
			[resultType]：生成主键所对应的Java类型
			[order]：指定该查询主键SQL语句的执行顺序，相对于insert语句
			[LAST_INSERT_ID]：MySQL的函数，要配合insert语句一起使用 -->
        <selectKey keyProperty="id" resultType="int" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        <!--如果主键是自增机制,此处不需要再给id赋值 -->
        insert into user(username,birthday,sex,address) values (#{username}, #{birthday},#{sex}, #{address})
    </insert>

    <insert id="insertUser3" parameterType="com.zzxy.mybatis.entity.User">
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            SELECT UUID()
        </selectKey>
        INSERT INTO USER (username,sex,birthday,address)
        VALUES(#{username},#{sex},#{birthday},#{address})
    </insert>


    <delete id="deleteUserById" parameterType="int">
        delete from user where id = #{id}
    </delete>

    <!--通过id更新用户信息-->
    <update id="updateUserInfo" parameterType="com.zzxy.mybatis.entity.User">
        update user set username=#{username},sex=#{sex} where id=#{id}
    </update>
</mapper>
